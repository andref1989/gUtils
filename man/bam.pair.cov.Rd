% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/gUtils.R
\name{bam.pair.cov}
\alias{bam.pair.cov}
\title{bam.pair.cov
Computes paired read coverage of pairs of ranges ij in gr.  i.e. determines
the number of high mapping quality read pairs leaving in interval within "win" bases of 3'
edge of gr[i] and ending up <anywhere> in gr[j].  Returns list with fields
$adj.counts = sparse matrix counting read pairs coming from 3' of interval i to anywhere in interval j
$tile.counts = input gr with meta data fields $npairs.unm and $npairs.mq0 showing number of unmapped reads and mapQ 0
reads.}
\usage{
bam.pair.cov(bam, gr, win = 1000, mq.thresh = 30, chunksize = 100,
  verbose = T, mc.cores = 1)
}
\arguments{
\item{bam}{bam file path}

\item{gr}{GRanges of tiles to test (e.g. output of gr.tile)}

\item{win}{window size on 3' end of gr to assay outgoing coverage, if NA will use the entire range}

\item{mq.thresh}{mapq threshold for determining "well mapped" reads}
}
\description{
bam.pair.cov
Computes paired read coverage of pairs of ranges ij in gr.  i.e. determines
the number of high mapping quality read pairs leaving in interval within "win" bases of 3'
edge of gr[i] and ending up <anywhere> in gr[j].  Returns list with fields
$adj.counts = sparse matrix counting read pairs coming from 3' of interval i to anywhere in interval j
$tile.counts = input gr with meta data fields $npairs.unm and $npairs.mq0 showing number of unmapped reads and mapQ 0
reads.
}

